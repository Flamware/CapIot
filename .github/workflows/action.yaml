name: Deploy Frontend to Kubernetes

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-22.04  # âœ… Pin to Ubuntu 22.04 for apt compatibility

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Google Cloud SDK and gke-gcloud-auth-plugin
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /usr/share/keyrings/cloud.google.gpg > /dev/null
          sudo apt-get update
          sudo apt-get install -y google-cloud-cli google-cloud-cli-gke-gcloud-auth-plugin
          gcloud version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: docker_build
        run: |
          IMAGE_TAG=$(date +%Y%m%d%H%M%S)-${GITHUB_SHA::8}
          docker buildx build --push \
            --tag flamware/capiot:$IMAGE_TAG \
            .
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure GCP credentials
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GKE_CREDENTIALS }}'

      - name: Set GKE context
        run: |
          gcloud container clusters get-credentials capiot-eu-cluster --region europe-west9 --project awesome-vigil-454917-q7

      - name: Update Kubernetes deployment
        run: |
          kubectl set image deployment/frontend-deployment frontend=flamware/capiot:${{ steps.docker_build.outputs.image_tag }} -n capiot-app
          kubectl rollout status deployment/frontend-deployment -n capiot-app --timeout=60s
